L_tot = 0
while (L_tot < L_end):
	min = 10
	val = []
	for i in range(1,20):
		n = 10.**(-1*i)
	
		for j in range(1,20):
			m = 10.**(-1*j)
	
			ret = chain([n,m],M_tot,L_tot,K_A,K_B,N_end)
			if (ret < min):
				min = ret
				val = [L_tot, n,m]
			
	print str(val)+":"+str(min)
	L_tot += L_step
	
	
	y1 = []

L_step = (L_end - L_start) / Evals

L_tot = 0
for i in range(1,20):

	M = 10.**(-1*i)
	temp = []
	x.append(log10(M))
	y = []
	
	for j in range(1,20):
		L = 10.**(-1*j)

		ret = chain([M,L],M_tot,L_tot,K_A,K_B,N_end)
		
		y.append(log10(L))
		y.append(log10(L))
		temp.append(ret)

	z.append(temp)

plot(x,y1)
#contour(x,y,z)
show()